"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __importDefault(require("path"));
var optsLoader_1 = require("../src/opts/optsLoader");
test('loads opts from ./s2m.config.js without args', function () {
    var testExportsFolderPath = path_1.default.resolve('./test_exports');
    var testExport = 't1.sql';
    var opts = optsLoader_1.loadOptsFromConfig({ _: [] });
    expect(opts).toEqual({
        afterAllFilePath: testExportsFolderPath + "/afterAll.js",
        beforeAllFilePath: testExportsFolderPath + "/beforeAll.js",
        dryRun: false,
        exportDefsFilePaths: [testExportsFolderPath + "/" + testExport],
        mongoDbConfig: {
            connectionString: 'http://mongo',
            dbName: 'mongoDbName',
        },
        sqlDbConfig: {
            database: 'name',
            host: 'host',
            password: 'pass',
            port: 123,
            username: 'user'
        }
    });
});
test('cli args overrides exportDefsFilePaths', function () {
    var testExportsFolderPath = path_1.default.resolve('./test_exports');
    var testExport = 't1.sql';
    var exportPath = './test_exports2/p1.sql';
    var resolvedExportPath = path_1.default.resolve(exportPath);
    var opts = optsLoader_1.loadOptsFromConfig({ _: [exportPath], 'after-all': true, 'before-all': true });
    expect(opts).toEqual({
        afterAllFilePath: testExportsFolderPath + "/afterAll.js",
        beforeAllFilePath: testExportsFolderPath + "/beforeAll.js",
        dryRun: false,
        exportDefsFilePaths: [resolvedExportPath],
        mongoDbConfig: {
            connectionString: 'http://mongo',
            dbName: 'mongoDbName',
        },
        sqlDbConfig: {
            database: 'name',
            host: 'host',
            password: 'pass',
            port: 123,
            username: 'user'
        }
    });
});
test('if cli args hooks arent executed unless specified', function () {
    var testExportsFolderPath = path_1.default.resolve('./test_exports');
    var testExport = 't1.sql';
    var exportPath = './test_exports2/p1.sql';
    var resolvedExportPath = path_1.default.resolve(exportPath);
    var opts = optsLoader_1.loadOptsFromConfig({ _: [exportPath] });
    expect(opts).toEqual({
        afterAllFilePath: undefined,
        beforeAllFilePath: undefined,
        dryRun: false,
        exportDefsFilePaths: [resolvedExportPath],
        mongoDbConfig: {
            connectionString: 'http://mongo',
            dbName: 'mongoDbName',
        },
        sqlDbConfig: {
            database: 'name',
            host: 'host',
            password: 'pass',
            port: 123,
            username: 'user'
        }
    });
});
test('-c flag overrides default config file path', function () {
    var testExportsFolderPath = path_1.default.resolve('./test_exports');
    var testExport = 't1.sql';
    var exportPath = './test_exports2/p1.sql';
    var resolvedExportPath = path_1.default.resolve(exportPath);
    var opts = optsLoader_1.loadOptsFromConfig({ _: [exportPath], config: './custom.config.js' });
    expect(opts).toEqual({
        afterAllFilePath: undefined,
        beforeAllFilePath: undefined,
        dryRun: false,
        exportDefsFilePaths: [resolvedExportPath],
        mongoDbConfig: {
            connectionString: 'http://mongo',
            dbName: 'mongoDbName',
        },
        sqlDbConfig: {
            database: 'name',
            host: 'host2',
            password: 'pass',
            port: 123,
            username: 'user'
        }
    });
});
