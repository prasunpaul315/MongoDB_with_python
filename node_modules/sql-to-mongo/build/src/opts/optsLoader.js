"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadOptsFromConfig = void 0;
var fs_1 = require("fs");
var path_1 = __importDefault(require("path"));
function loadOptsFromConfig(args) {
    var configFilePath = path_1.default.resolve(args.config || './s2m.config.js');
    var config;
    try {
        config = require(configFilePath) || {};
    }
    catch (error) {
        if (error.code === 'MODULE_NOT_FOUND') {
            throw new Error("Error loading config file: " + configFilePath);
        }
        else {
            throw error;
        }
    }
    var sqlDbConfig = config.sqlDbConfig, mongoDbConfig = config.mongoDbConfig;
    var exportsDirPath = path_1.default.resolve(args.path || config.exportsDirPath);
    if (!sqlDbConfig) {
        throw new Error('sqlDbConfig is required');
    }
    var dryRun = args['dry-run'] || false;
    if (!mongoDbConfig && !dryRun) {
        throw new Error('mongoDbConfig is required');
    }
    var beforeAllFilePath = path_1.default.join(exportsDirPath, 'beforeAll.js');
    var afterAllFilePath = path_1.default.join(exportsDirPath, 'afterAll.js');
    // if file paths were provided as cli args,  beforeAll and afterAll hooks won't run
    // by default unless explicitly specified 
    //
    // if its a dry run, we don't want to run the beforeAll and afterAll hooks
    if ((!args['before-all'] && args._.length > 0) || dryRun) {
        beforeAllFilePath = undefined;
    }
    if ((!args['after-all'] && args._.length > 0) || dryRun) {
        afterAllFilePath = undefined;
    }
    var exportDefsFilePaths = args._.length > 0 ?
        args._.map(function (filePath) { return path_1.default.resolve(filePath); }) : getExportDefFilePathsOfDir(exportsDirPath);
    if (!exportDefsFilePaths || !exportDefsFilePaths.length) {
        throw new Error('No export definition files were specified');
    }
    return {
        exportDefsFilePaths: exportDefsFilePaths,
        dryRun: dryRun,
        beforeAllFilePath: beforeAllFilePath,
        afterAllFilePath: afterAllFilePath,
        sqlDbConfig: sqlDbConfig,
        mongoDbConfig: mongoDbConfig
    };
}
exports.loadOptsFromConfig = loadOptsFromConfig;
function getExportDefFilePathsOfDir(dirPath) {
    if (!dirPath) {
        return [];
    }
    try {
        return fs_1.readdirSync(dirPath)
            .filter(function (fileName) { return !(fileName === 'beforeAll.js' || fileName === 'afterAll.js'); })
            .map(function (fileName) { return path_1.default.join(dirPath, fileName); });
    }
    catch (error) {
        if (error.code === 'ENOENT') {
            throw new Error("Directory " + dirPath + " does not exist");
        }
        else {
            throw error;
        }
    }
}
